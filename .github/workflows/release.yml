name: Release

on:
  push:
    tags:
      - '*'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      # –®–∞–≥ 1: –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞
      - name: Checkout code
        uses: actions/checkout@v3

      # –®–∞–≥ 2: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python
      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      # –®–∞–≥ 3: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Poetry
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      # –®–∞–≥ 4: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –±–µ–∑ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–∞–º–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
      - name: Install dependencies
        run: |
          poetry install --no-root

      # –®–∞–≥ 5: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ –≤ pyproject.toml —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ç–µ–≥–∞
      - name: Update version using tag
        env:
          TAG: ${{ github.ref_name }}
        run: |
          echo "Setting version to $TAG"
          poetry version $TAG

      # –®–∞–≥ 6: –°–±–æ—Ä–∫–∞ –ø–∞–∫–µ—Ç–æ–≤ (sdist –∏ wheel)
      - name: Build package
        run: |
          poetry build

      # –®–∞–≥ 7: –ü—É–±–ª–∏–∫–∞—Ü–∏—è –ø–∞–∫–µ—Ç–∞ –Ω–∞ PyPI
      - name: Publish to PyPI
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
        run: |
          poetry publish --username __token__ --password $POETRY_PYPI_TOKEN_PYPI

      # –®–∞–≥ 8: –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞ –Ω–∞ GitHub
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            üéâ New release version ${{ github.ref_name }} is available!
            - Automatically versioned by tag
          draft: false
          prerelease: false

      # –®–∞–≥ 9: –ó–∞–≥—Ä—É–∑–∫–∞ wheel —Ñ–∞–π–ª–æ–≤ –≤ —Ä–µ–ª–∏–∑
      - name: Upload wheel files to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/
          asset_name: "*.whl"
          asset_content_type: application/octet-stream
